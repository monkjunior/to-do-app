{"version":3,"sources":["Firebase.js","components/DoneTask.js","components/Activity.js","components/Task.js","components/FormTask.js","components/ToDo.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","DoneTask","props","ref","firestore","collection","log","handleClick","bind","handleDblClick","delete","e","id","currentTarget","toString","this","makeUnDone","doc","then","console","catch","error","old_id","get","exists","data","name","detail","time","currentTime","Date","getTime","toLocaleDateString","toLocaleTimeString","set","className","onDoubleClick","onClick","Component","Activity","tasks","taskList","map","task","key","reverse","Task","makeDone","FormTask","handleAdd","preventDefault","document","getElementById","value","taskTime","docRef","err","handleDel","type","placeholder","cols","rows","ToDo","Main","onToDoCollectionUpdate","querySnapshot","forEach","push","setState","state","onDoneCollectionUpdate","done","unsubscribe","onSnapshot","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e1d29071.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nimport firestore from 'firebase/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyC-podzmrb-krx-HDycqENO4fiElXgbR6g\",\n  authDomain: \"vungocson998.github.io/to-do-app\",\n  databaseURL: \"https://to-do-app-13683.firebaseio.com\",\n  projectId: \"to-do-app-13683\",\n  storageBucket: \"gs://to-do-app-13683.appspot.com\",\n  messagingSenderId: \"Son Vu | To do app\"\n};\nfirebase.initializeApp(config);\n\n\nexport default firebase;","import React, {Component} from 'react';\nimport firebase from '../Firebase';\n\nclass DoneTask extends Component {\n    constructor(props){\n        super(props);\n        this.ref = firebase.firestore().collection('tasks');\n        this.log = firebase.firestore().collection('done');\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDblClick = this.handleDblClick.bind(this);\n        this.delete = this.delete.bind(this);\n    }\n\n    handleClick(e){\n        let id = e.currentTarget.id.toString() ;\n        this.makeUnDone(id);\n    }\n\n    handleDblClick(e) {\n        let id = e.currentTarget.id.toString() ;\n        this.delete(id);\n    }\n\n    delete(id){\n        this.log.doc(id).delete()\n        .then(() => {\n            console.log(\"DONE COLLECTION: Document successfully deleted!\");\n        })\n        .catch((error) => {\n            console.error(\"DONE COLLECTION: Error in deleting document: \", error);\n        });\n    }\n\n    makeUnDone(old_id){\n        let task = this.log.doc(old_id).get()\n        .then((doc) => {\n            if (doc.exists) {\n                let {name, detail, time, id } = doc.data();\n                let currentTime = new Date();\n                id = currentTime.getTime().toString();\n                time = `${currentTime.toLocaleDateString()}  |  ${currentTime.toLocaleTimeString()}` ;\n                this.ref.doc(id).set({\n                    id,\n                    name,\n                    detail,\n                    time,\n                });\n                console.log(\"DONE COLLECTION  --> TASKS COLLECTION : UnDone\", doc.data());\n                this.delete(old_id);\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"DONE COLLECTION  --> TASKS COLLECTION : Error\");\n            }\n        })\n        .catch((error)=>{\n            console.error(\"DONE COLLECTION: Error moving document: \", error);\n        })\n        ;\n    }\n\n    render(){\n        return(\n            <li className=\"task\" id={this.props.id} onDoubleClick={this.handleDblClick} onClick={this.handleClick}>\n                <div className=\"task-line\">\n                    <div className=\"task-line-node\"></div>\n                    <div className=\"task-line-tail\"></div>\n                </div>\n                <div className=\"task-content\">\n                    <div className=\"task-name\">\n                        {this.props.name}\n                    </div>\n\n                    <div className=\"task-detail\">\n                        <p>{this.props.detail}</p>\n                    </div>\n\n                    <div className=\"task-time\">\n                        {this.props.time}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default DoneTask;","import React from 'react';\nimport DoneTask from './DoneTask';\n\nfunction Activity(props){\n    const {tasks} = props;\n    console.log(\"Done \" + props);\n    const taskList = tasks.map(task => {\n        return(\n            <DoneTask name={task.name} detail={task.detail} time={task.time} id={task.id} key={task.id}/>\n        )\n    })\n    return(\n        <div className=\"activity\">\n            <div className=\"activity-title\">Log</div>\n            <span> Click to undone task | Double click to delete task</span>\n            <ul className=\"donetask-wrapper\">\n                    <div className=\"task-wrapper-space\">\n                        {taskList.reverse()}\n                    </div>\n            </ul>\n        </div>\n    )\n}\n\nexport default Activity;","import React, {Component} from 'react';\nimport firebase from '../Firebase';\n\nclass Task extends Component{\n    constructor(props){\n        super(props);\n        this.ref = firebase.firestore().collection('tasks');\n        this.log = firebase.firestore().collection('done');\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDblClick = this.handleDblClick.bind(this);\n        this.delete = this.delete.bind(this);\n        this.makeDone = this.makeDone.bind(this);\n    }\n\n    handleClick(e){\n        let id = e.currentTarget.id.toString() ;\n        this.makeDone(id);\n    }\n\n    handleDblClick(e) {\n        let id = e.currentTarget.id.toString() ;\n        this.delete(id);\n    }\n\n    delete(id){\n        this.ref.doc(id).delete()\n        .then(() => {\n            console.log(\"TASKS COLLECTION:Document successfully deleted!\");\n        })\n        .catch((error) => {\n            console.error(\"TASKS COLLECTION: Error in deleting document: \", error);\n        });\n    }\n\n    makeDone(old_id){\n        let task = this.ref.doc(old_id).get()\n        .then((doc) => {\n            if (doc.exists) {\n                let {name, detail, time, id } = doc.data();\n                let currentTime = new Date();\n                id = currentTime.getTime().toString();\n                time = `${currentTime.toLocaleDateString()}  |  ${currentTime.toLocaleTimeString()}` ;\n                this.log.doc(id).set({\n                    id,\n                    name,\n                    detail,\n                    time,\n                });\n                console.log(\"TASKS COLLECTION --> DONE COLLECTION : Done\", doc.data());\n                this.delete(old_id);\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"TASKS COLLECTION --> DONE COLLECTION : Error\");\n            }\n        })\n        .catch((error)=>{\n            console.error(\"TASKS COLLECTION: Error moving document: \", error);\n        })\n        ;\n    }\n    \n\n    render(){\n        return(\n            <li className=\"task\" id={this.props.id} onDoubleClick={this.handleDblClick} onClick={this.handleClick}>\n                <div className=\"task-line\">\n                    <div className=\"task-line-node\"></div>\n                    <div className=\"task-line-tail\"></div>\n                </div>\n                <div className=\"task-content\">\n                    <div className=\"task-name\">\n                        {this.props.name}\n                    </div>\n\n                    <div className=\"task-detail\">\n                        <p>{this.props.detail}</p>\n                    </div>\n\n                    <div className=\"task-time\">\n                        {this.props.time}\n                    </div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Task;","import React, {Component} from 'react';\nimport firebase from '../Firebase';\nimport './FormTask.css';\n\nclass FormTask extends Component{\n    constructor(props){\n        super(props);\n        this.ref = firebase.firestore().collection('tasks');\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleDel = this.handleDel.bind(this);\n    }\n\n    handleAdd = function(e){\n        e.preventDefault();\n        let name = document.getElementById('task-name').value;\n        if (name !== \"\"){\n            console.log(\"start\");\n            let detail = document.getElementById('task-detail').value;\n            let taskTime = new Date();\n            let id = taskTime.getTime();\n            let time = `${taskTime.toLocaleDateString()}  |  ${taskTime.toLocaleTimeString()}` ;\n            console.log(taskTime);\n            this.ref.doc(id.toString()).set({\n                id,\n                name,\n                detail,\n                time,\n            })\n            .then((docRef)=>{\n                console.log(\"Adding Document Successfully\");\n                document.getElementById('task-name').value = \"\";\n                document.getElementById('task-detail').value = \"\";\n            }\n            )\n            .catch((err)=>{\n                console.log(\"Adding Error\" + err);\n            });\n        }\n    }\n\n    handleDel = function(e){\n        e.preventDefault();\n        console.log(\"Handle Del\");\n    }\n\n    render(){\n        return(\n            <form>\n                <input type=\"text\" placeholder=\"Task name\" id=\"task-name\" />\n                <textarea name=\"\" id=\"task-detail\" cols=\"1\" rows=\"1\" placeholder=\"Detail ...\"></textarea>\n                <div className=\"button-wrapper\">\n                    <button type=\"submit\" id=\"add-button\" onClick={this.handleAdd}>Add</button>\n                    <button type=\"submit\" id=\"delete-button\" onClick={this.handleDel}>Delete</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default FormTask;","import React from 'react';\nimport Task from './Task';\nimport FormTask from './FormTask';\n\nfunction ToDo(props){\n    const {tasks} = props;\n    console.log(\"To do \" + props);\n    const taskList = tasks.map(task => {\n        return(\n            <Task name={task.name} detail={task.detail} time={task.time} id={task.id} key={task.id}/>\n        )\n    })\n    return(\n        <div className=\"to-do\">\n            <div className=\"to-do-title\">\n                To do list\n            </div>\n            <span> Click to done task | Double click to delete task</span>\n            <FormTask />\n            <ul className=\"task-wrapper\">\n                    <div className=\"task-wrapper-space\">\n                        {taskList.reverse()}\n                    </div>\n            </ul>\n        </div>\n    )\n}\n\nexport default ToDo;","import React, {Component} from 'react';\nimport firebase from '../Firebase';\nimport './Main.css';\nimport Activity from './Activity';\nimport ToDo from './ToDo';\n\nclass Main extends Component{\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('tasks');\n        this.log = firebase.firestore().collection('done');\n        this.unsubscribe = null;\n        this.state = {\n          tasks: [],\n          done: []\n        };\n      }\n    \n    onToDoCollectionUpdate = (querySnapshot) => {\n        const tasks = [];\n        querySnapshot.forEach((task) => {\n          const {name, detail, time, id } = task.data();\n          console.log(task.data());\n          console.log(name);\n          tasks.push({\n            id,\n            task, // DocumentSnapshot\n            detail,\n            name,\n            time,\n          });\n        });\n        this.setState({\n          tasks: tasks\n        });\n        console.log(this.state.tasks[0]);\n    }\n\n    onDoneCollectionUpdate = (querySnapshot) => {\n      const tasks = [];\n      querySnapshot.forEach((task) => {\n        const {name, detail, time, id } = task.data();\n        console.log(task.data());\n        console.log(name);\n        tasks.push({\n          id,\n          task, // DocumentSnapshot\n          detail,\n          name,\n          time,\n        });\n      });\n      this.setState({\n        done: tasks\n      });\n      console.log(this.state.done[0]);\n  }\n    \n    componentDidMount() {\n        this.unsubscribe = this.ref.onSnapshot(this.onToDoCollectionUpdate);\n        this.unsubscribe = this.log.onSnapshot(this.onDoneCollectionUpdate);\n    }\n\n    render(){\n        return(\n            <div className=\"main\">\n                <ToDo tasks={this.state.tasks} />\n                <Activity tasks={this.state.done}/>\n            </div>\n        );\n    }\n    \n}\n\nexport default Main;","import React, {Component} from 'react';\nimport Main from './components/Main';\n\nfunction App (props) {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}